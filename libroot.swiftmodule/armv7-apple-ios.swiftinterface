// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target armv7-apple-ios7.0 -enable-objc-interop -enable-library-evolution -module-name libroot
import Foundation
import Swift
@_exported import libroot
@_alwaysEmitIntoClient public func jbRootPath(_ cPath: Swift.UnsafePointer<Swift.CChar>?) -> Swift.String {
    guard let resolved = libroot_dyn_jbrootpath(cPath, nil) else { return "" }
    let result = String(cString: resolved)
    free(resolved)
    return result
}
@_alwaysEmitIntoClient @_disfavoredOverload public func jbRootPath<S>(_ path: S) -> Swift.String where S : Swift.StringProtocol {
    path.withCString { cPath in
        jbRootPath(cPath)
    }
}
@_alwaysEmitIntoClient public func rootFsPath(_ cPath: Swift.UnsafePointer<Swift.CChar>?) -> Swift.String {
    guard let resolved = libroot_dyn_rootfspath(cPath, nil) else { return "" }
    let result = String(cString: resolved)
    free(resolved)
    return result
}
@_alwaysEmitIntoClient @_disfavoredOverload public func rootFsPath<S>(_ path: S) -> Swift.String where S : Swift.StringProtocol {
    path.withCString { cPath in
        rootFsPath(cPath)
    }
}
